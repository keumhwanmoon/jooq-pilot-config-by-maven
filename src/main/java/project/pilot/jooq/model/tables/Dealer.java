/*
 * This file is generated by jOOQ.
*/
package project.pilot.jooq.model.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import project.pilot.jooq.model.Indexes;
import project.pilot.jooq.model.Keys;
import project.pilot.jooq.model.Pilot;
import project.pilot.jooq.model.tables.records.DealerRecord;


/**
 * 딜러
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dealer extends TableImpl<DealerRecord> {

    private static final long serialVersionUID = 958841951;

    /**
     * The reference instance of <code>pilot.dealer</code>
     */
    public static final Dealer DEALER = new Dealer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DealerRecord> getRecordType() {
        return DealerRecord.class;
    }

    /**
     * The column <code>pilot.dealer.DEALER_ID</code>. 딜러ID
     */
    public final TableField<DealerRecord, String> DEALER_ID = createField("DEALER_ID", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "딜러ID");

    /**
     * The column <code>pilot.dealer.DEALER_NAME</code>. 딜러명
     */
    public final TableField<DealerRecord, String> DEALER_NAME = createField("DEALER_NAME", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "딜러명");

    /**
     * The column <code>pilot.dealer.SHOP_ID</code>. 상사ID
     */
    public final TableField<DealerRecord, String> SHOP_ID = createField("SHOP_ID", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "상사ID");

    /**
     * The column <code>pilot.dealer.CREATE_DATE</code>.
     */
    public final TableField<DealerRecord, Date> CREATE_DATE = createField("CREATE_DATE", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>pilot.dealer.LAST_UPDATE_DATE</code>.
     */
    public final TableField<DealerRecord, Date> LAST_UPDATE_DATE = createField("LAST_UPDATE_DATE", org.jooq.impl.SQLDataType.DATE.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DATE)), this, "");

    /**
     * Create a <code>pilot.dealer</code> table reference
     */
    public Dealer() {
        this(DSL.name("dealer"), null);
    }

    /**
     * Create an aliased <code>pilot.dealer</code> table reference
     */
    public Dealer(String alias) {
        this(DSL.name(alias), DEALER);
    }

    /**
     * Create an aliased <code>pilot.dealer</code> table reference
     */
    public Dealer(Name alias) {
        this(alias, DEALER);
    }

    private Dealer(Name alias, Table<DealerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dealer(Name alias, Table<DealerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "딜러");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Pilot.PILOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEALER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DealerRecord> getPrimaryKey() {
        return Keys.KEY_DEALER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DealerRecord>> getKeys() {
        return Arrays.<UniqueKey<DealerRecord>>asList(Keys.KEY_DEALER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dealer as(String alias) {
        return new Dealer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dealer as(Name alias) {
        return new Dealer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dealer rename(String name) {
        return new Dealer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dealer rename(Name name) {
        return new Dealer(name, null);
    }
}
